// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String @unique
  role         String
  refreshToken String

  account Account?
  classes Class[]
  grades  Grade[]

  @@map("users")
}

model Account {
  userId   Int    @unique
  username String @unique
  password String
  status   String

  user User @relation(fields: [userId], references: [id])

  @@map("accounts")
}

model Class {
  id           Int                @id @default(autoincrement())
  code         String
  name         String
  teacherId    Int
  inviteCode   String
  status       String
  theme        String             @default("1a.jpg")
  description  String             @default("No description")
  compositions GradeComposition[]

  teacher  User    @relation(fields: [teacherId], references: [id])
  students Grade[]

  @@map("classes")
}

model Grade {
  id        Int   @id @default(autoincrement())
  studentId Int
  classId   Int
  overall   Float @default(0)

  student User  @relation(fields: [studentId], references: [id])
  class   Class @relation(fields: [classId], references: [id])

  @@map("grades")
}

model GradeComposition {
  id          Int     @id @default(autoincrement())
  classId     Int
  position    Int
  name        String
  scale       Float
  isFinalized Boolean @default(false)

  class Class @relation(fields: [classId], references: [id])

  @@map("grade_compositions")
}

model GradePoint {
  studentId          Int
  gradeCompositionId Int
  points             Json[]

  @@id([studentId, gradeCompositionId])
  @@map("grade_points")
}
